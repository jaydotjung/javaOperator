Process(프로세스)
	Thread의 집합으로 하나의 exe, com, dll 프로그램을 뜻함
-특징 : 프로세스간 자원(리소스:메모리)를 공유할 수 없다. 
	따라서 프로세스를 많이 발생시키면 자원이 바닥남
Thread
	반복적으로 동기화하여 실행되는 프로그램 루틴
	메소드 단위의 처리 모듈. 프로세스의 구성요소
	Thread는 많이 발생해도 자원을 공유함으로 
	프로세스에 비해 스스템의 부담이 적음
Thread를 구현하는 방법
	1. Thread 클래스를 상속하는 방법
	2. Runnable 인터페이스를 구현하는 방법
	-> 객체지향의 취지에서는 인터페이스를 구현하는 방식이 더 낫다. 
Thread의 콜백메소드
	start() : JVM 이 스케쥴상 여유가 생겼을 때, thread 스케쥴상
	run()을 호출한다.
	run() : thread 상태에서 처리하려고 하는 모든 비지니스로직(serviceImpl)이 구현됨
	sleep(long second) : 지정된 시간동안 스레드를 쉬게하고, 그 시간이 지나면 다시 작동한다. 1000이 1초이다.
	wait() : 현재 thread 무한 대기. notify() 메소드를 실행하면 재실행됨 
	stop() : thread 실행 종료
	단일 thread :
		하나의 자바 프로그램 실행 상태
		main() 이 대표적인 싱글 thread
	멀티 thread :
		하나의 메소드만 실행되는 것이 아닌 여러개의 메소드가 동시 다발적으로 실행되는 것.
		여러개의 메소드가 지속적으로 자원(메모리)를 공유하는 것
	콜백 메소드
		메소드를 일정 실행 순서로 미리 등록시켜놓고
		등록된 순서에 따라 자동적으로 호출하는 메소드
	dead lock: 두 thread가 lock 을 건 상태에서
	서로 lock이 풀리기를 기다리는 상황으로
	작업이 진행되지 않고 영원히 기다리게 되는 상황
	프로그램에서는 변수와 while 문, if 문을 사용해서 스레드를 제거해야 한다. 
	synchronization: 한개의 공유자원을 여러개의 thread가 이용할 때
	해당 thread만 제외하고 나머지는 접근을 못하도록 막는 것. 
	이것을 lock이라고 한다.
	자바 synchronization은 식별자로 구별한다. 
	